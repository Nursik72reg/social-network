{"version":3,"sources":["componets/profile/profileInfo/ProfilInfo.module.css","redux/dialogs-reducer.js","img/30.svg","componets/profile/myPost/MyPosts.module.css","img/loginFon.png","img/simson.gif","componets/common/FormContols.jsx","componets/navbar/Navbar.jsx","componets/common/Preloader.jsx","Api/Api.js","redux/profile-reducer.js","componets/profile/myPost/post/Posts.jsx","componets/profile/myPost/MyPosts.jsx","componets/profile/myPost/MyPostContainer.js","componets/profile/myStatus/myStatus.jsx","componets/profile/profileInfo/ProfileDataForm.jsx","componets/profile/profileInfo/ProfilInfo.jsx","componets/profile/Profile.jsx","componets/profile/ProfileContainer.jsx","componets/header/Header.jsx","redux/auth-reducer.js","componets/header/HeaderContainer.js","componets/login/Login.jsx","redux/app-reducer.js","componets/common/PreloaderTwo.jsx","redux/user-reducers.js","componets/common/paginator/Paginator.js","componets/user/Users.jsx","componets/user/UserContainer.js","App.js","redux/redux-store.js","serviceWorker.js","index.js","componets/navbar/Navbar.module.css","componets/login/Login.module.css","utils/validators/validators.js","componets/common/FormContols.module.css","componets/header/Header.module.css","componets/common/paginator/Paginator.module.css","img/person__img.png","hoc/withAuthRedirect.js","componets/profile/myPost/post/Post.module.css","componets/user/Users.module.css","componets/common/Preloader.module.css","componets/common/PreloaderTwo.module.css"],"names":["module","exports","initialState","dialogs","name","id","newMessagesText","messagess","value","addMessagesActiveCreate","text","type","dialogsReducer","state","active","body","Textarea","input","meta","hasError","error","touched","props","className","classes","Input","label","inputDiv","placeholder","inputNorm","NavbarContainer","connect","isTopic","authUser","colorItems","blue","dark","navbar","item","to","Preloader","preLoader","loader","src","loading","instance","axios","withCredentials","baseURL","headers","Api","page","count","get","delete","post","userId","status","put","email","password","rememberMe","photoFile","formData","FormData","append","profile","pos","profileInfo","isFetcher","profilePage","dispatch","setIsFetcherActiveCreate","then","response","setProfileInfo","data","fetch","getStatus","savePhotoSuccess","photos","profileReducer","copState","action","newPostText","newText","Posts","posts_items","img","maxLenght10","maxLenght","NewPosts","reduxForm","form","Form","onSubmit","handleSubmit","Field","component","validate","required","MyPosts","p","map","nav","dataValue","addPostsActionCreator","Post","MyPostContainer","MyStatus","editMode","activeEditMode","setState","deactiveEditMode","putProfileStatus","onChangeStatus","e","currentTarget","prevProps","prevState","snapshot","this","onClick","onBlur","onChange","autoFocus","React","Component","ReduxProfileDataForm","page_top","ProfileData","fullName","block","lookingForAJob","lookingForAJobDescription","aboutMe","page_info","contacts","isOwner","btn","setMode","ProfileInfo","useState","setEditMode","page_block","large","avaPhoto","imgFile","target","files","length","savePhoto","page_info_wrap","initialValues","setNewProfile","page_post","Profile","ProfileContainer","match","params","userID","getProfileStatus","profileInform","compose","file","getState","withRouter","withAuthRedirect","Header","row","topik","switchTopic","isAuth","login","deleteAuthLogin","setAuthUser","authMe","a","resultCode","authReducer","topic","HeadersContainer","HeaderContainer","maxLenght35","LoginReduxForm","formError","postAuthLogin","message","messages","stopSubmit","_error","items","container","items_block","loginFon","initialized","appReducer","PreloaderTwo","gif","users","pageSize","totalUserCount","currentPage","portionSize","isDisable","setUsersActiveCreate","isBtnDisable","userReducers","m","followed","curentPage","totalCount","usersPage","pageCount","Math","ceil","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionNumber","rightPortionNumber","filter","select","onPageChanged","Users","small","disabled","unFollow","followw","UsersContainer","pageNumber","getPageUserThunk","getUserThunk","unFollowThunk","followThunk","isDisableBtn","AuthRedirectComponent","UserContainer","DialogsContainer","lazy","App","initializeApp","Route","exact","path","render","Redirect","fallback","app","reducers","combineReducers","dialogsPage","formReducer","store","createStore","applyMiddleware","thunkMiddleware","window","Boolean","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","RedirectComponent","isAuths"],"mappings":"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","file":"static/js/main.3cafd594.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"ProfilInfo_img__1tD3G\",\"page_block\":\"ProfilInfo_page_block__114jh\",\"contacts\":\"ProfilInfo_contacts__2SdFV\",\"page_info_wrap\":\"ProfilInfo_page_info_wrap__1n6sO\",\"page_top\":\"ProfilInfo_page_top__2LfBL\",\"page_info\":\"ProfilInfo_page_info__AG54R\",\"page_post\":\"ProfilInfo_page_post__3UXkT\",\"imgFile\":\"ProfilInfo_imgFile__1m587\",\"page_job\":\"ProfilInfo_page_job__3mPF0\",\"block\":\"ProfilInfo_block__2E3tw\",\"btn\":\"ProfilInfo_btn__3L6pa\"};","const ADD_MESSAGES = \"addMessages\";\r\nlet initialState = {\r\n    dialogs: [\r\n        {name: \"Dimych\", id: 1},\r\n        {name: \"Lena\", id: 2},\r\n        {name: \"Pavel\", id: 3},\r\n        {name: \"Vickor\", id: 4},\r\n    ],\r\n    newMessagesText: \"\",\r\n    messagess: [\r\n        {value: \"Hello\"},\r\n        {value: \"Hello\"},\r\n        {value: \"Hello\"},\r\n    ]\r\n};\r\nconst dialogsReducer = (state = initialState, active) => {\r\n    switch (active.type) {\r\n        case ADD_MESSAGES:{\r\n            let body = {value : active.text}\r\n            return {\r\n                ...state,\r\n                messagess:[...state.messagess,body]\r\n            }\r\n        }\r\n    }\r\n    return state;\r\n};\r\nexport let addMessagesActiveCreate = (text) => {\r\n    debugger\r\n    return {type: ADD_MESSAGES, text: text}\r\n};\r\nexport default dialogsReducer","module.exports = __webpack_public_path__ + \"static/media/30.24a544b7.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"MyPosts_nav__1M9XE\"};","module.exports = __webpack_public_path__ + \"static/media/loginFon.611f6ec2.png\";","module.exports = __webpack_public_path__ + \"static/media/simson.7c9e1e73.gif\";","import React from \"react\";\r\nimport classes from \"./FormContols.module.css\"\r\n\r\n\r\n\r\nexport const Textarea = ({input, meta}, ...props) => {\r\n    let hasError = meta.error && meta.touched;\r\n    return (\r\n        <div>\r\n            <div>\r\n                <textarea className={hasError ? classes.input : \"\"} {...input}{...props}/>\r\n            </div>\r\n            {hasError && <span className={classes.error}>{meta.error}</span>}\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport const Input = ({type, meta,label, input}, ...props) => {\r\n    let hasError = meta.error && meta.touched;\r\n    return (\r\n        <div>\r\n            <div className={classes.inputDiv}>\r\n                <input type = {type} placeholder={label} className={hasError ? classes.input : classes.inputNorm} {...input}{...props}/>\r\n                <div>\r\n                    {hasError && <span className={classes.error}>{meta.error}</span>}\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport classes from \"./Navbar.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst Navbar = (props) => {\r\n   let colorItems = props.isTopic ? classes.blue : classes.dark;\r\n    return (\r\n        <div className={classes.navbar}>\r\n            <ui>\r\n                <li className={classes.item}>\r\n                    <NavLink to=\"/profile\" className={colorItems}> Profile</NavLink>\r\n                </li>\r\n                <li className={classes.item}>\r\n                <NavLink to=\"/dialogs\" className={colorItems}>Messeges</NavLink>\r\n                </li>\r\n                <li className={classes.item}>\r\n                    <NavLink to= \"/user\" className={colorItems}>User</NavLink>\r\n                </li>\r\n                <li className={classes.item}>\r\n                    <NavLink to= \"/news\" className={colorItems}>News</NavLink>\r\n                </li>{/*\r\n                <li className={classes.item}>\r\n                    <a className={classes.a}>Music</a>\r\n                </li>*/}\r\n            </ui>\r\n        </div>\r\n    );\r\n};\r\nlet mapStateToProps = (state)=>{\r\n    return {\r\n        isTopic: state.authUser.isTopic\r\n    }\r\n};\r\nexport const NavbarContainer = connect(mapStateToProps,{})(Navbar);\r\n\r\n","import React from \"react\";\r\nimport loading from \"../../img/30.svg\"\r\nimport classes from \"./Preloader.module.css\"\r\n\r\nlet Preloader = () => {\r\n    return (\r\n        <div className={classes.preLoader}>\r\n            <img className={classes.loader} src={loading}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Preloader;","import * as axios from \"axios\"\r\n\r\nlet instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0',\r\n    headers: {\r\n        \"API-KEY\": \"006b2188-eaae-4c23-a8db-8a54963062c6\"\r\n    }\r\n});\r\n\r\nexport let Api = {\r\n    getUsers(page, count) {\r\n        return instance.get(`users?page=${page}&count=${count}`)\r\n    },\r\n    unFollowed(id) {\r\n        return instance.delete(`follow/${id}`)\r\n    },\r\n    upFollowed(id) {\r\n        return instance.post(`follow/${id}`)\r\n    },\r\n    profilePage(userId){\r\n        return instance.get(`profile/${userId}`)\r\n    },\r\n    authMe(){\r\n        return instance.get(`auth/me`)\r\n    },\r\n    getProfileStatus(id){\r\n        return instance.get(`profile/status/`+ id)\r\n    },\r\n    putProfileStatus(status){\r\n        return instance.put(`/profile/`, {status})\r\n    },\r\n    postAuthLogin(email, password, rememberMe){\r\n        return instance.post(`/auth/login/`, {email, password, rememberMe})\r\n    },\r\n    deletAuthLogin(){\r\n        return instance.delete(`/auth/login`)\r\n    },\r\n    savePhoto(photoFile){\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile)\r\n        return instance.put(\"profile/photo\", formData,{\r\n            headers : {\r\n                \"Content-Type\":\"multipart/form-data\"\r\n            }\r\n        })\r\n    },\r\n    newProfile(profile){\r\n        return instance.put(`/profile`, profile)\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n","import {Api} from \"../Api/Api\";\r\n\r\nconst ADD_POST = \"addPost\";\r\nconst UPDATE_NEW_POST_TEXT = \"updateNewPostText\";\r\nconst PROFILE_INFO = \"profileInfo\";\r\nconst GET_STATUS = \"getStatus\";\r\nconst SAVE_PHOTO = \"savePhoto\";\r\nconst SET_IS_FETCHER = \"setIsFetcher\";\r\n\r\nlet initialState = {\r\n    pos: [\r\n        {name: \"Gergii\", text: \"Как это сдлетьа?\"},\r\n        {name: \"Gergii\", text: \"Как это сдлетьа?\"},\r\n        {name: \"Gergii\", text: \"Как это сдлетьа?\"},\r\n    ],\r\n    profileInfo: null,\r\n    status: \"\",\r\n    isFetcher: false\r\n\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    let copState;\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let body = {name: \"Sveta\", text: action.value};\r\n            return {\r\n                ...state,\r\n                pos: [...state.pos, body],\r\n\r\n            }\r\n        }\r\n\r\n        case UPDATE_NEW_POST_TEXT:\r\n            copState = {...state};\r\n            copState.newPostText = action.newText;\r\n            return copState;\r\n\r\n        case PROFILE_INFO: {\r\n            return {\r\n                ...state,\r\n                profileInfo: action.profile\r\n            }\r\n        }\r\n        case GET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case SAVE_PHOTO: {\r\n            return {\r\n                ...state,\r\n                profileInfo: {...state.profileInfo, photos: action.photos}\r\n            }\r\n        }\r\n        case SET_IS_FETCHER :\r\n            return {\r\n                ...state,\r\n                isFetcher: action.fetch\r\n            }\r\n    }\r\n    return state;\r\n};\r\n\r\nexport const profilePage = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(setIsFetcherActiveCreate(true));\r\n        Api.profilePage(userId)\r\n            .then(response => {\r\n                dispatch(setIsFetcherActiveCreate(false));\r\n                dispatch(setProfileInfo(response.data))\r\n            })\r\n    }\r\n};\r\nexport const getProfileStatus = (id) => {\r\n    return (dispatch) => {\r\n        Api.getProfileStatus(id)\r\n            .then(response => {\r\n                dispatch(getStatus(response.data))\r\n            })\r\n    }\r\n};\r\n\r\nexport const putProfileStatus = (status) => {\r\n    return (dispatch) => {\r\n        Api.putProfileStatus(status)\r\n            .then(response => {\r\n                dispatch(getStatus(status))\r\n\r\n            })\r\n    }\r\n\r\n};\r\nexport const savePhoto = (file) => {\r\n    return (dispatch) => {\r\n        dispatch(setIsFetcherActiveCreate(true));\r\n        Api.savePhoto(file)\r\n            .then(response => {\r\n                dispatch(setIsFetcherActiveCreate(false));\r\n                dispatch(savePhotoSuccess(response.data.data.photos))\r\n            })\r\n    }\r\n\r\n};\r\nexport const setNewProfile = (value) => {\r\n    return (dispatch, getState) => {\r\n        const userId = getState().authUser.userId;\r\n        dispatch(setIsFetcherActiveCreate(true))\r\n        Api.newProfile(value)\r\n            .then(response => {\r\n                dispatch(profilePage(userId))\r\n            })\r\n    }\r\n\r\n};\r\nexport const setIsFetcherActiveCreate = (fetch) => {\r\n    return {type: SET_IS_FETCHER, fetch}\r\n};\r\nexport let addPostsActionCreator = (value) => {\r\n    return {type: ADD_POST, value}\r\n};\r\nexport let onPostChangeActionCreator = (text) => {\r\n    return {type: UPDATE_NEW_POST_TEXT, newText: text};\r\n};\r\nexport let setProfileInfo = (profile) => {\r\n    return {type: PROFILE_INFO, profile}\r\n};\r\nexport let getStatus = (status) => {\r\n    return {type: GET_STATUS, status}\r\n};\r\nexport let savePhotoSuccess = (photos) => {\r\n    return {type: SAVE_PHOTO, photos}\r\n};\r\n\r\n\r\nexport default profileReducer;","import React from \"react\";\r\nimport classes from \"./Post.module.css\"\r\n\r\n\r\nconst Posts = ({name, text})=>{\r\n    return(\r\n      <div className={classes.posts_items}>\r\n          <img className={classes.img} src=\"https://avatars.mds.yandex.net/get-pdb/1572252/b00e3606-aa7e-4565-a0aa-eddea98fd035/s1200?webp=false\"/>\r\n          <div className={classes.item}>{name}: {text}</div>\r\n      </div>\r\n    )\r\n}\r\nexport default Posts;","import React from \"react\";\r\nimport classes from \"./MyPosts.module.css\"\r\nimport Posts from \"./post/Posts\";\r\nimport {Field, Form, reduxForm} from \"redux-form\";\r\nimport {maxLenght, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormContols\";\r\n\r\nconst maxLenght10 = maxLenght(15);\r\n\r\nconst MyPosts = (props) => {\r\n   const onSubmit = (dataValue)=>{\r\n        props.addPostsActionCreator(dataValue.Post)\r\n   };\r\n    let p = props.pos.map(p => <Posts name={p.name} text={p.text}/>);\r\n    return (\r\n        <div>\r\n            <div className={classes.nav}>\r\n                <h3>My post</h3>\r\n                <div>\r\n                    <NewPosts onSubmit = {onSubmit}/>\r\n                </div>\r\n                {p}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst NewPost = (props)=>{\r\n    return(\r\n        <Form onSubmit={props.handleSubmit}>\r\n          <Field name =\"Post\" component={Textarea} placeholder=\"New post\" validate = {[required, maxLenght10]}/>\r\n          <button>Ok</button>\r\n        </Form>\r\n    )\r\n};\r\nconst NewPosts = reduxForm({\r\n    form:\"NewPost\"\r\n})(NewPost);\r\n\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport {addPostsActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nlet mapStateToProps = (state)=>{\r\n    return{\r\n        pos:state.profilePage.pos,\r\n        newPostText:state.profilePage.newPostText\r\n    }\r\n};\r\nconst MyPostContainer = connect(mapStateToProps,\r\n    {addPostsActionCreator})(MyPosts);\r\n\r\nexport default MyPostContainer;","import React from \"react\";\r\n\r\nclass MyStatus extends React.Component {\r\n    state = ({\r\n        editMode: false,\r\n    });\r\n    activeEditMode = ()=>{\r\n        this.setState({\r\n            editMode:true,\r\n            status:this.props.status\r\n        })\r\n    };\r\n    deactiveEditMode = ()=>{\r\n        this.setState({\r\n            editMode:false\r\n        });\r\n        this.props.putProfileStatus(this.state.status)\r\n    };\r\n\r\n    onChangeStatus = (e) =>{\r\n        this.setState({\r\n            status:e.currentTarget.value\r\n        });\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps.status !== this.props.status){\r\n            this.setState({\r\n                status:this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {!this.state.editMode &&\r\n                    <div onClick = {this.activeEditMode}>\r\n                        <span>{this.props.status || \"Обновить статус\"}</span>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div onBlur={this.deactiveEditMode}>\r\n                        <input onChange={this.onChangeStatus}  autoFocus = {true} value={this.state.status}/>\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default MyStatus","import React from \"react\";\r\nimport classes from \"./ProfilInfo.module.css\";\r\nimport {Contacts} from \"./ProfilInfo\";\r\nimport {Field, Form, reduxForm} from \"redux-form\";\r\nimport {Input, Textarea} from \"../../common/FormContols\";\r\n\r\nlet ProfileDataForm = (props) => {\r\n    return (\r\n        <Form onSubmit={props.handleSubmit}>\r\n            <button>Сохранить</button>\r\n            <div className={classes.page_top}>\r\n                <div>Имя</div>\r\n                <Field name={\"fullName\"}\r\n                       component={Input}\r\n                       label={\"Введите имя\"}\r\n                >\r\n                </Field>\r\n                <div>Ищите работу?</div><Field name={\"lookingForAJob\"}\r\n                       component={Input}\r\n                       type={\"checkbox\"}\r\n                       label={\"Ищите работу?\"}\r\n                >\r\n                </Field>\r\n                <div>Мои профессиональные скиллы</div>\r\n                <Field name={\"lookingForAJobDescription\"}\r\n                       component={Input}\r\n                       label={\"Скилл\"}\r\n                >\r\n                </Field>\r\n                <div>О себе</div>\r\n                <Field name={\"aboutMe\"}\r\n                       component={Input}\r\n                       label={\"О себе\"}\r\n                >\r\n                </Field>\r\n\r\n            </div>\r\n\r\n        </Form>\r\n    )\r\n};\r\nlet ReduxProfileDataForm = reduxForm({\r\n    form: \"profileForm\"\r\n})(ProfileDataForm)\r\n\r\n\r\nexport default ReduxProfileDataForm;","import React, {useState} from \"react\";\r\nimport classes from \"./ProfilInfo.module.css\";\r\nimport Preloader from \"../../common/Preloader\";\r\nimport MyPostContainer from \"../myPost/MyPostContainer\";\r\nimport MyStatus from \"../myStatus/myStatus\";\r\nimport avaPhoto from \"../../../img/person__img.png\"\r\nimport ReduxProfileDataForm from \"./ProfileDataForm\";\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    let onSubmit = (formData) => {\r\n        props.setNewProfile(formData);\r\n        setEditMode(false)\r\n    };\r\n    if (!props.profileInfo) {\r\n        return <Preloader/>\r\n    }\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    };\r\n    return (\r\n        <div>\r\n            <div className={classes.contacts}>\r\n                <div>\r\n                    <div className={classes.page_block}>\r\n                        <img className={classes.img} src={props.profileInfo.photos.large || avaPhoto}/>\r\n                        {props.isOwner && <div>\r\n                            <div>Обновить фотографию</div>\r\n                            <input className={classes.imgFile} onChange={onMainPhotoSelected} type={\"file\"}/>\r\n                        </div>}\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div className={classes.page_info_wrap}>\r\n\r\n                        {editMode ? <ReduxProfileDataForm\r\n                                initialValues={props.profileInfo}\r\n                                onSubmit={onSubmit}\r\n                                profileInfo={props.profileInfo}/>\r\n                            : <ProfileData profileInfo={props.profileInfo}\r\n                                           setMode={() => {\r\n                                               setEditMode(true)\r\n                                           }}\r\n                                           isOwner={props.isOwner}/>}\r\n\r\n                        <MyStatus putProfileStatus={props.putProfileStatus} status={props.status}/>\r\n                    </div>\r\n                    <div className={classes.page_post}>\r\n\r\n                        <MyPostContainer/>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nlet ProfileData = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={classes.page_top}>\r\n                <h2>{props.profileInfo.fullName}</h2>\r\n                <div>\r\n                    <div className={classes.block}>\r\n                        <b>Ищите работу?</b>: {props.profileInfo.lookingForAJob ? \"Да\" : \"нет\"}\r\n                    </div>\r\n                    {props.profileInfo.lookingForAJob &&\r\n                    <div className={classes.block}>\r\n                        <b>Мои скиллы</b>: {props.profileInfo.lookingForAJobDescription}\r\n                    </div>}\r\n                    <div className={classes.block}>\r\n                        <b>О себе</b>: {props.profileInfo.aboutMe}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className={classes.page_info}>\r\n                <div className={classes.contacts}>\r\n                    <b>Contacts</b>\r\n                    <div>Россия</div>\r\n                    <div>г.Тюмень</div>\r\n                </div>\r\n            </div>\r\n            {props.isOwner && <div>\r\n                <button className={classes.btn} onClick={props.setMode}>Редактировать</button>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default ProfileInfo\r\n","import React from \"react\";\r\nimport ProfileInfo from \"./profileInfo/ProfilInfo\";\r\nconst Profile = (props) => {\r\n\r\n  return (\r\n    <div>\r\n        <ProfileInfo setNewProfile = {props.setNewProfile}\r\n                    putProfileStatus = {props.putProfileStatus}\r\n                     isOwner={props.isOwner} profileInfo = {props.profileInfo}\r\n                     status = {props.status} savePhoto={props.savePhoto}/>\r\n    </div>\r\n  );\r\n};\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfileStatus, profilePage, putProfileStatus, savePhoto, setNewProfile} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport Preloader from \"../common/Preloader\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.userID\r\n        }\r\n        this.props.profilePage(userId);\r\n        this.props.getProfileStatus(userId)\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isFetcher ? <Preloader/> : null}\r\n                <Profile  {...this.props } isOwner={!this.props.match.params.userId}\r\n                          profileInfo={this.props.profileInform} status={this.props.status}\r\n                          savePhoto = {this.props.savePhoto}\r\n                         putProfileStatus={this.props.putProfileStatus}\r\n                          setNewProfile = {this.props.setNewProfile}/>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profileInform: state.profilePage.profileInfo,\r\n        status: state.profilePage.status,\r\n        userID: state.authUser.userId,\r\n        isFetcher: state.profilePage.isFetcher\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        profilePage,\r\n        getProfileStatus,\r\n        putProfileStatus,\r\n        savePhoto,\r\n        setNewProfile\r\n    }),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);\r\n\r\n\r\n","import React from \"react\";\r\nimport classes from \"./Header.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    const topik = () => {\r\n        if (!props.isTopic) {\r\n            props.switchTopic(true);\r\n        } else if (props.isTopic) {\r\n            props.switchTopic(false)\r\n        }\r\n    };\r\n    return (\r\n        <header className={props.isTopic ? classes.blue : classes.dark}>\r\n            <div className={classes.row}>\r\n                <div>\r\n                    <h3 className={classes.item}>itProger</h3>\r\n                </div>\r\n                <div className={classes.btn}>\r\n                    <button className={classes.topik} onClick={topik}>Сменить тему</button>\r\n                    {props.isAuth\r\n                        ? <div>\r\n                            <span> {props.login}</span>\r\n                            <button onClick={props.deleteAuthLogin}>Выйти</button>\r\n\r\n                        </div>\r\n                        : <NavLink to={\"/login\"}>\r\n                            <button>Login</button>\r\n                        </NavLink>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default Header;\r\n","import {Api} from \"../Api/Api\";\r\nimport React from \"react\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\n\r\nconst AUTH_USER = \"authUser\";\r\nconst TOPIC = \"topic\";\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    login: null,\r\n    email: null,\r\n    isAuth: false,\r\n    isTopic: true\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case AUTH_USER:\r\n            return {\r\n                ...state,\r\n                ...action.authUser\r\n            };\r\n        case TOPIC: {\r\n            return {\r\n                ...state,\r\n                isTopic: action.topic\r\n            }\r\n        }\r\n    }\r\n    return state;\r\n};\r\n\r\nexport const setAuthUser = (userId, login, email, isAuth) => {\r\n    return {\r\n        type: AUTH_USER,\r\n        authUser: {userId, login, email, isAuth}\r\n    }\r\n};\r\n\r\nexport const switchTopic = (topic) => {\r\n    return {\r\n        type: TOPIC,\r\n        topic\r\n    }\r\n};\r\n\r\nexport const authMe = () => {\r\n    return async (dispatch) => {\r\n        let response = await Api.authMe()\r\n        if (response.data.resultCode === 0) {\r\n            let {id, login, email} = response.data.data;\r\n            dispatch(setAuthUser(id, login, email, true))\r\n        }\r\n\r\n    };\r\n};\r\nexport const postAuthLogin = (email, password, rememberMe) => {\r\n    return (dispatch) => {\r\n        Api.postAuthLogin(email, password, rememberMe)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(authMe())\r\n                } else {\r\n                    let message = response.data.length = 1 ? response.data.messages[0] : \"Some error\";\r\n                    dispatch(stopSubmit(\"Login\", {_error: message}));\r\n                }\r\n            })\r\n    }\r\n};\r\nexport const deleteAuthLogin = () => {\r\n    return (dispatch) => {\r\n        Api.deletAuthLogin()\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(setAuthUser(null, null, null, false))\r\n                }\r\n            })\r\n    }\r\n};\r\n\r\n\r\nexport default authReducer;","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {authMe, deleteAuthLogin, switchTopic} from \"../../redux/auth-reducer\";\r\nclass HeadersContainer extends React.Component{\r\n    componentDidMount() {\r\n        this.props.authMe();\r\n    }\r\n    render() {\r\n        return(\r\n            <Header login = {this.props.login} isAuth = {this.props.isAuth} isTopic = {this.props.isTopic}\r\n                    switchTopic = {this.props.switchTopic} deleteAuthLogin = {this.props.deleteAuthLogin}/>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state)=>{\r\n    return{\r\n        login: state.authUser.login,\r\n        isAuth: state.authUser.isAuth,\r\n        isTopic: state.authUser.isTopic\r\n    }\r\n};\r\nexport const HeaderContainer = connect(mapStateToProps, {authMe,switchTopic,deleteAuthLogin})(HeadersContainer);","import React from \"react\";\r\nimport classes from \"./Login.module.css\"\r\nimport {Field, Form, reduxForm} from \"redux-form\";\r\nimport {maxLenght, required} from \"../../utils/validators/validators\";\r\nimport {Input} from \"../common/FormContols\";\r\nimport {connect} from \"react-redux\";\r\nimport {postAuthLogin} from \"../../redux/auth-reducer\";\r\nimport loginFon from \"../../img/loginFon.png\"\r\n\r\nconst maxLenght35 = maxLenght(35);\r\n\r\nlet Login = (props) => {\r\n    const onSumbit = (formData) => {\r\n        props.postAuthLogin(formData.login, formData.password, true);\r\n    };\r\n    return (\r\n        <div>\r\n            <div>{!props.login ?  <h1 className={classes.items}>Вход в систему !!!</h1>\r\n                :<h1 className={classes.items}>Добро пожаловать <div>{props.login}</div></h1>}\r\n\r\n            </div>\r\n            <div className={classes.container}>\r\n                <div className={classes.items_block}>\r\n                    <h2>Войти</h2>\r\n                    <LoginReduxForm onSubmit={onSumbit}/>\r\n                </div>\r\n                <div>\r\n                    <img src={loginFon} className={classes.img}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nlet FormLogin = (props) => {\r\n    return (\r\n        <Form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name={\"login\"}\r\n                       component={Input}\r\n                       label = {\"Введите логин\"}\r\n                       validate={[required, maxLenght35]}/>\r\n\r\n            </div>\r\n            <div>\r\n                <Field name={\"password\"}\r\n                       type = \"password\"\r\n                       component={Input}\r\n                       label = {\"Введите пароль\"}\r\n                       validate={[required, maxLenght35]}/>\r\n                {props.error && <span className={classes.formError}>{props.error}</span>}\r\n            </div>\r\n\r\n            <div>\r\n                <button className={classes.btn}>Ok</button>\r\n            </div>\r\n        </Form>\r\n    )\r\n};\r\n\r\nlet LoginReduxForm = reduxForm({\r\n    form: \"Login\"\r\n})(FormLogin);\r\n\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n       login: state.authUser.login\r\n    }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, {postAuthLogin})(Login);","import {authMe} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = \"INITIALIZED\";\r\n\r\nlet initialState = {\r\n    initialized:false\r\n};\r\n\r\nconst appReducer = (state = initialState, action)=>{\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:{\r\n            return{\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const initializedSuccess = () =>{\r\n    return{\r\n        type:INITIALIZED_SUCCESS\r\n    }\r\n};\r\n\r\nexport const initializeApp = () =>{\r\n    return(dispatch)=>{\r\n        let promise = dispatch(authMe())\r\n        promise.then(()=>{\r\n            dispatch(initializedSuccess() )\r\n        })\r\n    }\r\n};\r\n\r\nexport default appReducer;","import React from \"react\";\r\nimport classes from \"./PreloaderTwo.module.css\";\r\nimport gif from \"../../img/simson.gif\"\r\nconst PreloaderTwo = () =>{\r\n    return(\r\n        <div className={classes.container}>\r\n            <img className={classes.img} src={gif}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default PreloaderTwo;","import {Api} from \"../Api/Api\";\r\n\r\nconst FOLOW_UP = \"folowUp\";\r\nconst UN_FOLLOW = \"unfollow\";\r\nconst SET_USERS = \"setUsers\";\r\nconst SET_CURRENT_PAGE = \"setCurrentPage\";\r\nconst SET_TOTAL_USER_COUNT = \"setTotalUserCount\";\r\nconst SET_IS_FETCHER = \"setIsFetcher\";\r\nconst BTN_DISABLE = \"btnDisable\";\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUserCount: 0,\r\n    currentPage: 1,\r\n    portionSize : 15,\r\n    isFetcher:true,\r\n    isDisable:false\r\n};\r\n\r\nconst userReducers = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLOW_UP:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(m => {\r\n                    if (m.id === action.userId) {\r\n                        return {...m, followed: true}\r\n                    }\r\n                    return m\r\n                })\r\n            };\r\n        case UN_FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(m => {\r\n                    if (m.id === action.userId) {\r\n                        return {...m, followed: false}\r\n                    }\r\n                    return m\r\n                })\r\n            };\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        }\r\n\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.curentPage\r\n            }\r\n        }\r\n\r\n\r\n        case SET_TOTAL_USER_COUNT: {\r\n            return {\r\n                ...state,\r\n                totalUserCount: action.totalCount\r\n            }\r\n        }\r\n\r\n        case BTN_DISABLE:{\r\n            return {\r\n                ...state,\r\n                isDisable: action.status\r\n            }\r\n        }\r\n\r\n        case SET_IS_FETCHER :\r\n            return {\r\n                ...state,\r\n                isFetcher: action.fetch\r\n            }\r\n    }\r\n\r\n    return state;\r\n};\r\n\r\n\r\nexport const folowActiveCreate = (userId) => {\r\n    return {\r\n        type: FOLOW_UP,\r\n        userId: userId\r\n    }\r\n\r\n};\r\n\r\nexport const unfolowActiveCreate = (userId) => {\r\n    return {\r\n        type: UN_FOLLOW,\r\n        userId: userId\r\n    }\r\n\r\n};\r\nexport const setUsersActiveCreate = (users) => {\r\n    return {\r\n        type: SET_USERS,\r\n        users\r\n    }\r\n};\r\nexport const setCurrentActiveCreate = (curentPage) => {\r\n    return {\r\n        type: SET_CURRENT_PAGE,\r\n        curentPage: curentPage\r\n    }\r\n\r\n};\r\nexport const setTotalUsersActiveCreate = (totalCount) => {\r\n    return {\r\n        type: SET_TOTAL_USER_COUNT,\r\n        totalCount\r\n    }\r\n};\r\nexport const setIsFetcherActiveCreate = (fetch) =>{\r\n    return{\r\n        type:SET_IS_FETCHER,\r\n        fetch\r\n    }\r\n};\r\nexport const isBtnDisable = (status) =>{\r\n    return{\r\n        type:BTN_DISABLE,\r\n        status\r\n    }\r\n};\r\n\r\nexport const getUserThunk = (currentPage,pageSize)=>{\r\n    return (dispatch) => {\r\n        Api.getUsers(currentPage, pageSize)\r\n            .then(response => {\r\n                dispatch(setIsFetcherActiveCreate(false));\r\n                dispatch(setUsersActiveCreate(response.data.items));\r\n                dispatch(setTotalUsersActiveCreate(response.data.totalCount ))\r\n            });\r\n    }\r\n};\r\n\r\nexport const getPageUserThunk =(pageNumber, pageSize)=>{\r\n    return (dispatch)=>{\r\n        dispatch(setCurrentActiveCreate(pageNumber));\r\n        dispatch(setIsFetcherActiveCreate(true));\r\n        Api.getUsers(pageNumber, pageSize)\r\n            .then(response => {\r\n                dispatch(setIsFetcherActiveCreate(false));\r\n                dispatch(setUsersActiveCreate(response.data.items));\r\n            });\r\n    }\r\n};\r\n\r\nexport const unFollowThunk = (id) =>{\r\n    return (dispatch)=>{\r\n        dispatch(isBtnDisable(true));\r\n        Api.unFollowed(id)\r\n            .then(response =>{\r\n            if(response.data.resultCode == 0){\r\n                dispatch(unfolowActiveCreate(id))\r\n            }\r\n                dispatch(isBtnDisable(false));\r\n        })\r\n    }\r\n};\r\nexport const followThunk = (id) =>{\r\n    return (dispatch) =>{\r\n        dispatch(isBtnDisable(true));\r\n        Api.upFollowed(id)\r\n            .then(response=>{\r\n                if(response.data.resultCode ==0){\r\n                    dispatch(folowActiveCreate(id))\r\n                }\r\n                dispatch(isBtnDisable(false));\r\n            })\r\n\r\n    }\r\n}\r\n\r\nexport default userReducers;\r\n","import classes from \"./Paginator.module.css\"\r\nimport React, {useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst Paginator = (props) => {\r\n    let pageCount = Math.ceil(props.totalUserCount / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pageCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    let portionCount = Math.ceil(pageCount / props.portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionNumber = (portionNumber - 1) * props.portionSize + 1;\r\n    let rightPortionNumber = portionNumber * props.portionSize;\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.pageSize}>\r\n                {portionNumber > 1 && <button className={classes.btn} onClick={() => {\r\n                    setPortionNumber(portionNumber - 1)\r\n                }}>Назад</button>}\r\n                {pages\r\n                    .filter(p => p >= leftPortionNumber && p <= rightPortionNumber)\r\n                    .map(m => {\r\n                        return <span className={props.currentPage === m && classes.select}\r\n                                     onClick={() => {\r\n                                         props.onPageChanged(m)\r\n                                     }}>{m},</span>\r\n\r\n                    })}\r\n                {portionCount > portionNumber && <button className={classes.btn} onClick={() => {\r\n                    setPortionNumber(portionNumber + 1)\r\n                }}>Вперед</button>}\r\n            </div>\r\n\r\n\r\n        </div>)\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        portionSize: state.usersPage.portionSize\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(Paginator);\r\n\r\n","import React from \"react\";\r\nimport classes from \"./Users.module.css\";\r\nimport photos from \"../../img/person__img.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Paginator from \"../common/paginator/Paginator\";\r\n\r\nconst Users = (props) => {\r\n    return (\r\n        <div>\r\n            <Paginator currentPage={props.currentPage} onPageChanged={props.onPageChanged}\r\n                       totalUserCount={props.totalUserCount}\r\n                       pageSize={props.pageSize}/>\r\n            {props.users.map(m => <div className={classes.container}>\r\n                <div>\r\n                    <NavLink to={\"/profile/\" + m.id}>\r\n                        <img className={classes.img}\r\n                             src={m.photos.small != null ? m.photos.small : photos}/>\r\n                    </NavLink>\r\n                    <div>\r\n                        {m.followed\r\n                            ? <button disabled={props.isDisable} onClick={() => {\r\n                                props.unFollow(m.id);\r\n                            }}>unfollowed</button>\r\n                            : <button disabled={props.isDisable} onClick={() => {\r\n                                props.followw(m.id);\r\n                            }}>followed</button>\r\n                        }\r\n\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div className={classes.status}>{m.status}</div>\r\n                    <div>{m.name}</div>\r\n                </div>\r\n            </div>)}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Users;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    followThunk,\r\n    getPageUserThunk,\r\n    getUserThunk,  unFollowThunk,\r\n\r\n} from \"../../redux/user-reducers\";\r\nimport Users from \"./Users\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport PreloaderTwo from \"../common/PreloaderTwo\";\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getUserThunk(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n    this.props.getPageUserThunk(pageNumber, this.props.pageSize)\r\n    };\r\n\r\n    render() {\r\n        return (<>\r\n                {this.props.isFetcher ? <PreloaderTwo/> : null}\r\n                <Users onPageChanged={this.onPageChanged}\r\n                       currentPage={this.props.currentPage}\r\n                       totalUserCount={this.props.totalUserCount}\r\n                       pageSize={this.props.pageSize}\r\n                       users={this.props.users}\r\n                       unFollow={this.props.unFollowThunk}\r\n                       followw={this.props.followThunk}\r\n                       isDisable={this.props.isDisableBtn}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUserCount: state.usersPage.totalUserCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetcher: state.usersPage.isFetcher,\r\n        isDisableBtn:state.usersPage.isDisable\r\n    }\r\n};\r\n\r\nlet AuthRedirectComponent = withAuthRedirect(UsersContainer);\r\nexport const UserContainer = connect(mapStateToProps,\r\n    {\r\n        getUserThunk,\r\n        getPageUserThunk,\r\n        unFollowThunk,\r\n        followThunk\r\n    })( AuthRedirectComponent);","import React, {Suspense} from \"react\";\r\nimport \"./App.css\";\r\nimport {NavbarContainer} from \"./componets/navbar/Navbar\";\r\nimport Route from \"react-router-dom/es/Route\";\r\nimport ProfileContainer from \"./componets/profile/ProfileContainer\";\r\nimport {HeaderContainer} from \"./componets/header/HeaderContainer\";\r\nimport Login from \"./componets/login/Login\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport PreloaderTwo from \"./componets/common/PreloaderTwo\";\r\nimport Preloader from \"./componets/common/Preloader\";\r\nimport {UserContainer} from \"./componets/user/UserContainer\";\r\nconst DialogsContainer = React.lazy(() => import( \"./componets/dialogs/DialogsContainer\"));\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <PreloaderTwo/>\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n                <HeaderContainer/>\r\n                <div className=\"menu\">\r\n                    <NavbarContainer/>\r\n                    <div className=\"app-wrapper-content\">\r\n                        <Route exact path=\"/\" render={() => <Redirect to={\"/profile\"}/>}/>\r\n                        <Route path=\"/dialogs\" component={() => {\r\n                            return <Suspense fallback={<Preloader/>}>\r\n                                <DialogsContainer/>\r\n                            </Suspense>\r\n                        }}/>\r\n                        <Route path=\"/profile/:userId?\" component={() => <ProfileContainer/>}/>\r\n                        <Route path=\"/user\" component={() => <UserContainer/>}/>\r\n                        <Route path=\"/login\" component={() => <Login/>}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        initialized: state.app.initialized\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp})\r\n)(App);\r\n\r\n\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport userReducers from \"./user-reducers\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from \"redux-form\"\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: userReducers,\r\n    authUser: authReducer,\r\n    form : formReducer,\r\n    app:appReducer\r\n    }\r\n);\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\nwindow.store = store;\r\n\r\nexport default store;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport store from \"./redux/redux-store\"\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\n\r\n\r\nReactDOM.render(\r\n    <HashRouter>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </HashRouter>,\r\n    document.getElementById('root'));\r\nserviceWorker.unregister();\r\n\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__14FE5\",\"item\":\"Navbar_item__28lhx\",\"blue\":\"Navbar_blue__6cV-r\",\"dark\":\"Navbar_dark__30s2W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Login_container__1MRLo\",\"items\":\"Login_items__37xh8\",\"img\":\"Login_img__1nr2V\",\"items_block\":\"Login_items_block__3wmqu\",\"btn\":\"Login_btn__2eYz7\",\"formError\":\"Login_formError__1WsTV\"};","export const required =(value)=>{\r\n    if(value){\r\n        return undefined;\r\n    }return \"Error\"\r\n};\r\n\r\nexport const maxLenght = (maxLenght) =>\r\n    (value)=>{\r\n        if( value && value.length > maxLenght){\r\n            return `Max lenght is ${maxLenght} symbols`\r\n        }return undefined\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"FormContols_error__2gpmY\",\"input\":\"FormContols_input__bvvjG\",\"inputDiv\":\"FormContols_inputDiv__1k-3y\",\"inputNorm\":\"FormContols_inputNorm__1Q1nL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"Header_blue__ouW5z\",\"dark\":\"Header_dark__2Nk9L\",\"row\":\"Header_row__GGvHV\",\"item\":\"Header_item__1dIs_\",\"btn\":\"Header_btn__2tLwS\",\"topik\":\"Header_topik__3CwhO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"Paginator_select__1Epzb\",\"pageSize\":\"Paginator_pageSize__1RMCZ\",\"btn\":\"Paginator_btn__3CrTy\"};","module.exports = __webpack_public_path__ + \"static/media/person__img.8ba43db7.png\";","import React from \"react\";\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\nimport {connect} from \"react-redux\";\r\n\r\nexport const withAuthRedirect = (Component) =>{\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuths) return <Redirect to = \"/login\"/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    const mapStateToPropsParam = (state) =>{\r\n        return{\r\n            isAuths: state.authUser.isAuth\r\n        }\r\n    };\r\n\r\n    let isParamConnect = connect(mapStateToPropsParam)(RedirectComponent);\r\n    return  isParamConnect\r\n\r\n};\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__31jZx\",\"img\":\"Post_img__2-pJ6\",\"posts_items\":\"Post_posts_items__Z4X_m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"Users_img__khvpA\",\"wrap\":\"Users_wrap__3HWeW\",\"container\":\"Users_container__2ou0a\",\"item\":\"Users_item__3d9eC\",\"status\":\"Users_status__30jGX\",\"number\":\"Users_number__1sYnz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preLoader\":\"Preloader_preLoader__12JXO\",\"loader\":\"Preloader_loader__2VRDL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PreloaderTwo_container__1TWdM\",\"img\":\"PreloaderTwo_img__2faZf\"};"],"sourceRoot":""}