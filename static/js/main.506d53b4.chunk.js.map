{"version":3,"sources":["redux/dialogs-reducer.js","img/30.svg","componets/profile/myPost/MyPosts.module.css","img/loginFon.png","img/simson.gif","componets/navbar/Navbar.jsx","componets/common/Preloader.jsx","Api/Api.js","redux/profile-reducer.js","componets/profile/myPost/post/Posts.jsx","componets/profile/myPost/MyPosts.jsx","componets/profile/myPost/MyPostContainer.js","componets/profile/myStatus/myStatus.jsx","componets/profile/profileInfo/ProfilInfo.jsx","componets/profile/Profile.jsx","componets/profile/ProfileContainer.jsx","componets/header/Header.jsx","redux/auth-reducer.js","componets/header/HeaderContainer.js","componets/login/Login.jsx","redux/app-reducer.js","componets/common/PreloaderTwo.jsx","redux/user-reducers.js","componets/common/paginator/Paginator.js","componets/user/Users.jsx","componets/user/UserContainer.js","App.js","redux/redux-store.js","serviceWorker.js","index.js","componets/navbar/Navbar.module.css","componets/profile/profileInfo/ProfilInfo.module.css","componets/login/Login.module.css","utils/validators/validators.js","componets/common/FormContols.module.css","componets/header/Header.module.css","componets/common/FormContols.jsx","componets/common/paginator/Paginator.module.css","img/person__img.png","hoc/withAuthRedirect.js","componets/profile/myPost/post/Post.module.css","componets/user/Users.module.css","componets/common/Preloader.module.css","componets/common/PreloaderTwo.module.css"],"names":["initialState","dialogs","name","id","newMessagesText","messagess","value","addMessagesActiveCreate","text","type","dialogsReducer","state","active","body","module","exports","NavbarContainer","connect","isTopic","authUser","props","colorItems","classes","blue","dark","className","navbar","item","to","Preloader","preLoader","loader","src","loading","instance","axios","withCredentials","baseURL","headers","Api","page","count","get","delete","post","userId","status","put","email","password","rememberMe","pos","profileInfo","setProfileInfo","profile","getStatus","profileReducer","copState","action","newPostText","newText","Posts","posts_items","img","maxLenght10","maxLenght","NewPosts","reduxForm","form","Form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","MyPosts","p","map","nav","dataValue","addPostsActionCreator","Post","MyPostContainer","profilePage","MyStatus","editMode","activeEditMode","setState","deactiveEditMode","putProfileStatus","onChangeStatus","e","currentTarget","prevProps","prevState","snapshot","this","onClick","onBlur","onChange","autoFocus","React","Component","ProfileInfo","contacts","page_block","photos","large","avaPhoto","aboutMe","page_info_wrap","page_top","fullName","page_info","facebook","vk","github","page_post","Profile","ProfileContainer","match","params","userID","getProfileStatus","profileInform","compose","dispatch","then","response","data","withRouter","withAuthRedirect","Header","row","btn","topik","switchTopic","isAuth","login","deleteAuthLogin","setAuthUser","authMe","a","resultCode","authReducer","topic","HeadersContainer","HeaderContainer","maxLenght35","LoginReduxForm","Input","label","error","formError","postAuthLogin","message","length","messages","stopSubmit","_error","items","container","items_block","formData","loginFon","initialized","appReducer","PreloaderTwo","gif","users","pageSize","totalUserCount","currentPage","portionSize","isFetcher","isDisable","setUsersActiveCreate","setIsFetcherActiveCreate","fetch","isBtnDisable","userReducers","m","followed","curentPage","totalCount","usersPage","pageCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionNumber","rightPortionNumber","filter","select","onPageChanged","Users","small","disabled","unFollow","followw","UsersContainer","pageNumber","getPageUserThunk","getUserThunk","unFollowThunk","followThunk","isDisableBtn","AuthRedirectComponent","UserContainer","DialogsContainer","lazy","App","initializeApp","Route","exact","path","render","Redirect","fallback","app","reducers","combineReducers","dialogsPage","formReducer","store","createStore","applyMiddleware","thunkMiddleware","window","Boolean","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","input","meta","hasError","touched","inputDiv","inputNorm","RedirectComponent","isAuths"],"mappings":"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","file":"static/js/main.506d53b4.chunk.js","sourcesContent":["const ADD_MESSAGES = \"addMessages\";\r\nlet initialState = {\r\n    dialogs: [\r\n        {name: \"Dimych\", id: 1},\r\n        {name: \"Lena\", id: 2},\r\n        {name: \"Pavel\", id: 3},\r\n        {name: \"Vickor\", id: 4},\r\n    ],\r\n    newMessagesText: \"\",\r\n    messagess: [\r\n        {value: \"Hello\"},\r\n        {value: \"Hello\"},\r\n        {value: \"Hello\"},\r\n    ]\r\n};\r\nconst dialogsReducer = (state = initialState, active) => {\r\n    switch (active.type) {\r\n        case ADD_MESSAGES:{\r\n            let body = {value : active.text}\r\n            return {\r\n                ...state,\r\n                messagess:[...state.messagess,body]\r\n            }\r\n        }\r\n    }\r\n    return state;\r\n};\r\nexport let addMessagesActiveCreate = (text) => {\r\n    debugger\r\n    return {type: ADD_MESSAGES, text: text}\r\n};\r\nexport default dialogsReducer","module.exports = __webpack_public_path__ + \"static/media/30.24a544b7.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"MyPosts_nav__1M9XE\"};","module.exports = __webpack_public_path__ + \"static/media/loginFon.611f6ec2.png\";","module.exports = __webpack_public_path__ + \"static/media/simson.7c9e1e73.gif\";","import React from \"react\";\r\nimport classes from \"./Navbar.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst Navbar = (props) => {\r\n   let colorItems = props.isTopic ? classes.blue : classes.dark;\r\n    return (\r\n        <div className={classes.navbar}>\r\n            <ui>\r\n                <li className={classes.item}>\r\n                    <NavLink to=\"/profile\" className={colorItems}> Profile</NavLink>\r\n                </li>\r\n                <li className={classes.item}>\r\n                <NavLink to=\"/dialogs\" className={colorItems}>Messeges</NavLink>\r\n                </li>\r\n                <li className={classes.item}>\r\n                    <NavLink to= \"/user\" className={colorItems}>User</NavLink>\r\n                </li>\r\n                <li className={classes.item}>\r\n                    <NavLink to= \"/news\" className={colorItems}>News</NavLink>\r\n                </li>{/*\r\n                <li className={classes.item}>\r\n                    <a className={classes.a}>Music</a>\r\n                </li>*/}\r\n            </ui>\r\n        </div>\r\n    );\r\n};\r\nlet mapStateToProps = (state)=>{\r\n    return {\r\n        isTopic: state.authUser.isTopic\r\n    }\r\n};\r\nexport const NavbarContainer = connect(mapStateToProps,{})(Navbar);\r\n\r\n","import React from \"react\";\r\nimport loading from \"../../img/30.svg\"\r\nimport classes from \"./Preloader.module.css\"\r\n\r\nlet Preloader = () => {\r\n    return (\r\n        <div className={classes.preLoader}>\r\n            <img className={classes.loader} src={loading}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Preloader;","import * as axios from \"axios\"\r\n\r\nlet instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0',\r\n    headers: {\r\n        \"API-KEY\": \"006b2188-eaae-4c23-a8db-8a54963062c6\"\r\n    }\r\n});\r\n\r\nexport let Api = {\r\n    getUsers(page, count) {\r\n        return instance.get(`users?page=${page}&count=${count}`)\r\n    },\r\n    unFollowed(id) {\r\n        return instance.delete(`follow/${id}`)\r\n    },\r\n    upFollowed(id) {\r\n        return instance.post(`follow/${id}`)\r\n    },\r\n    profilePage(userId){\r\n        return instance.get(`profile/${userId}`)\r\n    },\r\n    authMe(){\r\n        return instance.get(`auth/me`)\r\n    },\r\n    getProfileStatus(id){\r\n        return instance.get(`profile/status/`+ id)\r\n    },\r\n    putProfileStatus(status){\r\n        return instance.put(`/profile/`, {status})\r\n    },\r\n    postAuthLogin(email, password, rememberMe){\r\n        return instance.post(`/auth/login/`, {email, password, rememberMe})\r\n    },\r\n    deletAuthLogin(){\r\n        return instance.delete(`/auth/login`)\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n","import {Api} from \"../Api/Api\";\r\nconst ADD_POST = \"addPost\";\r\nconst UPDATE_NEW_POST_TEXT = \"updateNewPostText\";\r\nconst PROFILE_INFO = \"profileInfo\";\r\nconst GET_STATUS = \"getStatus\";\r\n\r\nlet initialState = {\r\n    pos: [\r\n        {name: \"Gergii\", text: \"Как это сдлетьа?\"},\r\n        {name: \"Gergii\", text: \"Как это сдлетьа?\"},\r\n        {name: \"Gergii\", text: \"Как это сдлетьа?\"},\r\n    ],\r\n    profileInfo: null,\r\n    status: \"\",\r\n\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    let copState;\r\n\r\n    switch (action.type) {\r\n        case ADD_POST:{\r\n            let body = {name:\"Sveta\", text :action.value};\r\n            return {\r\n                ...state,\r\n                pos:[...state.pos,body],\r\n\r\n            }\r\n        }\r\n\r\n        case UPDATE_NEW_POST_TEXT:\r\n            copState = {...state};\r\n            copState.newPostText = action.newText;\r\n            return copState;\r\n\r\n        case PROFILE_INFO: {\r\n            return {\r\n                ...state,\r\n                profileInfo: action.profile\r\n            }\r\n        }\r\n        case GET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n    }\r\n    return state;\r\n};\r\n\r\nexport const profilePage = (userId) => {\r\n    return (dispatch) => {\r\n        Api.profilePage(userId)\r\n            .then(response => {\r\n                dispatch(setProfileInfo(response.data))\r\n            })\r\n    }\r\n};\r\nexport const getProfileStatus = (id) => {\r\n    return (dispatch) => {\r\n        Api.getProfileStatus(id)\r\n            .then(response => {\r\n                dispatch(getStatus(response.data))\r\n            })\r\n    }\r\n};\r\n\r\nexport const putProfileStatus = (status) => {\r\n    return (dispatch) => {\r\n        Api.putProfileStatus(status)\r\n            .then(response => {\r\n                    dispatch(getStatus(status))\r\n\r\n            })\r\n    }\r\n\r\n};\r\n\r\nexport let addPostsActionCreator = (value) => {\r\n    return {type: ADD_POST, value}\r\n};\r\nexport let onPostChangeActionCreator = (text) => {\r\n    return {type: UPDATE_NEW_POST_TEXT, newText: text};\r\n};\r\nexport let setProfileInfo = (profile) => {\r\n    return {type: PROFILE_INFO, profile}\r\n};\r\nexport let getStatus = (status) => {\r\n    return {type: GET_STATUS, status}\r\n};\r\n\r\n\r\n\r\nexport default profileReducer;","import React from \"react\";\r\nimport classes from \"./Post.module.css\"\r\n\r\n\r\nconst Posts = ({name, text})=>{\r\n    return(\r\n      <div className={classes.posts_items}>\r\n          <img className={classes.img} src=\"https://avatars.mds.yandex.net/get-pdb/1572252/b00e3606-aa7e-4565-a0aa-eddea98fd035/s1200?webp=false\"/>\r\n          <div className={classes.item}>{name}: {text}</div>\r\n      </div>\r\n    )\r\n}\r\nexport default Posts;","import React from \"react\";\r\nimport classes from \"./MyPosts.module.css\"\r\nimport Posts from \"./post/Posts\";\r\nimport {Field, Form, reduxForm} from \"redux-form\";\r\nimport {maxLenght, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormContols\";\r\n\r\nconst maxLenght10 = maxLenght(15);\r\n\r\nconst MyPosts = (props) => {\r\n   const onSubmit = (dataValue)=>{\r\n        props.addPostsActionCreator(dataValue.Post)\r\n   };\r\n    let p = props.pos.map(p => <Posts name={p.name} text={p.text}/>);\r\n    return (\r\n        <div>\r\n            <div className={classes.nav}>\r\n                <h3>My post</h3>\r\n                <div>\r\n                    <NewPosts onSubmit = {onSubmit}/>\r\n                </div>\r\n                {p}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst NewPost = (props)=>{\r\n    return(\r\n        <Form onSubmit={props.handleSubmit}>\r\n          <Field name =\"Post\" component={Textarea} placeholder=\"New post\" validate = {[required, maxLenght10]}/>\r\n          <button>Ok</button>\r\n        </Form>\r\n    )\r\n};\r\nconst NewPosts = reduxForm({\r\n    form:\"NewPost\"\r\n})(NewPost);\r\n\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport {addPostsActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nlet mapStateToProps = (state)=>{\r\n    return{\r\n        pos:state.profilePage.pos,\r\n        newPostText:state.profilePage.newPostText\r\n    }\r\n};\r\nconst MyPostContainer = connect(mapStateToProps,\r\n    {addPostsActionCreator})(MyPosts);\r\n\r\nexport default MyPostContainer;","import React from \"react\";\r\n\r\nclass MyStatus extends React.Component {\r\n    state = ({\r\n        editMode: false,\r\n    });\r\n    activeEditMode = ()=>{\r\n        this.setState({\r\n            editMode:true,\r\n            status:this.props.status\r\n        })\r\n    };\r\n    deactiveEditMode = ()=>{\r\n        this.setState({\r\n            editMode:false\r\n        });\r\n        this.props.putProfileStatus(this.state.status)\r\n    };\r\n\r\n    onChangeStatus = (e) =>{\r\n        this.setState({\r\n            status:e.currentTarget.value\r\n        });\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps.status !== this.props.status){\r\n            this.setState({\r\n                status:this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {!this.state.editMode &&\r\n                    <div onClick = {this.activeEditMode}>\r\n                        <span>{this.props.status || \"---\"}</span>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div onBlur={this.deactiveEditMode}>\r\n                        <input onChange={this.onChangeStatus}  autoFocus = {true} value={this.state.status}/>\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default MyStatus","import React from \"react\";\r\nimport classes from \"./ProfilInfo.module.css\";\r\nimport Preloader from \"../../common/Preloader\";\r\nimport MyPostContainer from \"../myPost/MyPostContainer\";\r\nimport MyStatus from \"../myStatus/myStatus\";\r\nimport avaPhoto from \"../../../img/person__img.png\"\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profileInfo) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={classes.contacts}>\r\n                <div>\r\n                    <div className={classes.page_block}>\r\n                        <img className={classes.img} src={props.profileInfo.photos.large  || avaPhoto}/>\r\n                        <div>{props.profileInfo.aboutMe}</div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div className={classes.page_info_wrap}>\r\n                        <div className={classes.page_top}>\r\n                            <h2>{props.profileInfo.fullName}</h2>\r\n                            <div className>\r\n                                <MyStatus putProfileStatus = {props.putProfileStatus} status = {props.status}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.page_info}>\r\n                            <div>{props.profileInfo.contacts.facebook}</div>\r\n                            <div>{props.profileInfo.contacts.vk}</div>\r\n                            <div>{props.profileInfo.contacts.github}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.page_post}>\r\n                        <MyPostContainer />\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nexport default ProfileInfo\r\n","import React from \"react\";\r\nimport ProfileInfo from \"./profileInfo/ProfilInfo\";\r\nconst Profile = (props) => {\r\n\r\n  return (\r\n    <div>\r\n        <ProfileInfo putProfileStatus = {props.putProfileStatus} profileInfo = {props.profileInfo} status = {props.status}/>\r\n    </div>\r\n  );\r\n};\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfileStatus, profilePage, putProfileStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.userID\r\n        }\r\n        this.props.profilePage(userId);\r\n        this.props.getProfileStatus(userId)\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Profile {...this.props} profileInfo={this.props.profileInform} status={this.props.status}\r\n                         putProfileStatus={this.props.putProfileStatus}/>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profileInform: state.profilePage.profileInfo,\r\n        status: state.profilePage.status,\r\n        userID: state.authUser.userId\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        profilePage,\r\n        getProfileStatus,\r\n        putProfileStatus\r\n    }),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);\r\n\r\n\r\n","import React from \"react\";\r\nimport classes from \"./Header.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    const topik = () => {\r\n        if (!props.isTopic) {\r\n            props.switchTopic(true);\r\n        } else if (props.isTopic) {\r\n            props.switchTopic(false)\r\n        }\r\n    };\r\n    return (\r\n        <header className={props.isTopic ? classes.blue : classes.dark}>\r\n            <div className={classes.row}>\r\n                <div>\r\n                    <h3 className={classes.item}>itProger</h3>\r\n                </div>\r\n                <div className={classes.btn}>\r\n                    <button className={classes.topik} onClick={topik}>Сменить тему</button>\r\n                    {props.isAuth\r\n                        ? <div>\r\n                            <span> {props.login}</span>\r\n                            <button onClick={props.deleteAuthLogin}>Выйти</button>\r\n\r\n                        </div>\r\n                        : <NavLink to={\"/login\"}>\r\n                            <button>Login</button>\r\n                        </NavLink>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default Header;\r\n","import {Api} from \"../Api/Api\";\r\nimport React from \"react\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\n\r\nconst AUTH_USER = \"authUser\";\r\nconst TOPIC = \"topic\";\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    login: null,\r\n    email: null,\r\n    isAuth: false,\r\n    isTopic: true\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case AUTH_USER:\r\n            return {\r\n                ...state,\r\n                ...action.authUser\r\n            };\r\n        case TOPIC: {\r\n            return {\r\n                ...state,\r\n                isTopic: action.topic\r\n            }\r\n        }\r\n    }\r\n    return state;\r\n};\r\n\r\nexport const setAuthUser = (userId, login, email, isAuth) => {\r\n    return {\r\n        type: AUTH_USER,\r\n        authUser: {userId, login, email, isAuth}\r\n    }\r\n};\r\n\r\nexport const switchTopic = (topic) => {\r\n    return {\r\n        type: TOPIC,\r\n        topic\r\n    }\r\n};\r\n\r\nexport const authMe = () => {\r\n    return async (dispatch) => {\r\n        let response = await Api.authMe()\r\n        if (response.data.resultCode === 0) {\r\n            let {id, login, email} = response.data.data;\r\n            dispatch(setAuthUser(id, login, email, true))\r\n        }\r\n\r\n    };\r\n};\r\nexport const postAuthLogin = (email, password, rememberMe) => {\r\n    return (dispatch) => {\r\n        Api.postAuthLogin(email, password, rememberMe)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(authMe())\r\n                } else {\r\n                    let message = response.data.length = 1 ? response.data.messages[0] : \"Some error\";\r\n                    dispatch(stopSubmit(\"Login\", {_error: message}));\r\n                }\r\n            })\r\n    }\r\n};\r\nexport const deleteAuthLogin = () => {\r\n    return (dispatch) => {\r\n        Api.deletAuthLogin()\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(setAuthUser(null, null, null, false))\r\n                }\r\n            })\r\n    }\r\n};\r\n\r\n\r\nexport default authReducer;","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {authMe, deleteAuthLogin, switchTopic} from \"../../redux/auth-reducer\";\r\nclass HeadersContainer extends React.Component{\r\n    componentDidMount() {\r\n        this.props.authMe();\r\n    }\r\n    render() {\r\n        return(\r\n            <Header login = {this.props.login} isAuth = {this.props.isAuth} isTopic = {this.props.isTopic}\r\n                    switchTopic = {this.props.switchTopic} deleteAuthLogin = {this.props.deleteAuthLogin}/>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state)=>{\r\n    return{\r\n        login: state.authUser.login,\r\n        isAuth: state.authUser.isAuth,\r\n        isTopic: state.authUser.isTopic\r\n    }\r\n};\r\nexport const HeaderContainer = connect(mapStateToProps, {authMe,switchTopic,deleteAuthLogin})(HeadersContainer);","import React from \"react\";\r\nimport classes from \"./Login.module.css\"\r\nimport {Field, Form, reduxForm} from \"redux-form\";\r\nimport {maxLenght, required} from \"../../utils/validators/validators\";\r\nimport {Input} from \"../common/FormContols\";\r\nimport {connect} from \"react-redux\";\r\nimport {postAuthLogin} from \"../../redux/auth-reducer\";\r\nimport loginFon from \"../../img/loginFon.png\"\r\n\r\nconst maxLenght35 = maxLenght(35);\r\n\r\nlet Login = (props) => {\r\n    const onSumbit = (formData) => {\r\n        props.postAuthLogin(formData.login, formData.password, true);\r\n    };\r\n    return (\r\n        <div>\r\n            <div>{!props.login ?  <h1 className={classes.items}>Вход в систему !!!</h1>\r\n                :<h1 className={classes.items}>Добро пожаловать <div>{props.login}</div></h1>}\r\n\r\n            </div>\r\n            <div className={classes.container}>\r\n                <div className={classes.items_block}>\r\n                    <h2>Войти</h2>\r\n                    <LoginReduxForm onSubmit={onSumbit}/>\r\n                </div>\r\n                <div>\r\n                    <img src={loginFon} className={classes.img}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nlet FormLogin = (props) => {\r\n    return (\r\n        <Form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name={\"login\"}\r\n                       component={Input}\r\n                       label = {\"Введите логин\"}\r\n                       validate={[required, maxLenght35]}/>\r\n\r\n            </div>\r\n            <div>\r\n                <Field name={\"password\"}\r\n                       type = \"password\"\r\n                       component={Input}\r\n                       label = {\"Введите пароль\"}\r\n                       validate={[required, maxLenght35]}/>\r\n                {props.error && <span className={classes.formError}>{props.error}</span>}\r\n            </div>\r\n\r\n            <div>\r\n                <button className={classes.btn}>Ok</button>\r\n            </div>\r\n        </Form>\r\n    )\r\n};\r\n\r\nlet LoginReduxForm = reduxForm({\r\n    form: \"Login\"\r\n})(FormLogin);\r\n\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n       login: state.authUser.login\r\n    }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, {postAuthLogin})(Login);","import {authMe} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = \"INITIALIZED\";\r\n\r\nlet initialState = {\r\n    initialized:false\r\n};\r\n\r\nconst appReducer = (state = initialState, action)=>{\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:{\r\n            return{\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const initializedSuccess = () =>{\r\n    return{\r\n        type:INITIALIZED_SUCCESS\r\n    }\r\n};\r\n\r\nexport const initializeApp = () =>{\r\n    return(dispatch)=>{\r\n        let promise = dispatch(authMe())\r\n        promise.then(()=>{\r\n            dispatch(initializedSuccess() )\r\n        })\r\n    }\r\n};\r\n\r\nexport default appReducer;","import React from \"react\";\r\nimport classes from \"./PreloaderTwo.module.css\";\r\nimport gif from \"../../img/simson.gif\"\r\nconst PreloaderTwo = () =>{\r\n    return(\r\n        <div className={classes.container}>\r\n            <img className={classes.img} src={gif}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default PreloaderTwo;","import {Api} from \"../Api/Api\";\r\n\r\nconst FOLOW_UP = \"folowUp\";\r\nconst UN_FOLLOW = \"unfollow\";\r\nconst SET_USERS = \"setUsers\";\r\nconst SET_CURRENT_PAGE = \"setCurrentPage\";\r\nconst SET_TOTAL_USER_COUNT = \"setTotalUserCount\";\r\nconst SET_IS_FETCHER = \"setIsFetcher\";\r\nconst BTN_DISABLE = \"btnDisable\";\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUserCount: 0,\r\n    currentPage: 1,\r\n    portionSize : 15,\r\n    isFetcher:true,\r\n    isDisable:false\r\n};\r\n\r\nconst userReducers = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLOW_UP:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(m => {\r\n                    if (m.id === action.userId) {\r\n                        return {...m, followed: true}\r\n                    }\r\n                    return m\r\n                })\r\n            };\r\n        case UN_FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(m => {\r\n                    if (m.id === action.userId) {\r\n                        return {...m, followed: false}\r\n                    }\r\n                    return m\r\n                })\r\n            };\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        }\r\n\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.curentPage\r\n            }\r\n        }\r\n\r\n\r\n        case SET_TOTAL_USER_COUNT: {\r\n            return {\r\n                ...state,\r\n                totalUserCount: action.totalCount\r\n            }\r\n        }\r\n\r\n        case BTN_DISABLE:{\r\n            return {\r\n                ...state,\r\n                isDisable: action.status\r\n            }\r\n        }\r\n\r\n        case SET_IS_FETCHER :\r\n            return {\r\n                ...state,\r\n                isFetcher: action.fetch\r\n            }\r\n    }\r\n\r\n    return state;\r\n};\r\n\r\n\r\nexport const folowActiveCreate = (userId) => {\r\n    return {\r\n        type: FOLOW_UP,\r\n        userId: userId\r\n    }\r\n\r\n};\r\n\r\nexport const unfolowActiveCreate = (userId) => {\r\n    return {\r\n        type: UN_FOLLOW,\r\n        userId: userId\r\n    }\r\n\r\n};\r\nexport const setUsersActiveCreate = (users) => {\r\n    return {\r\n        type: SET_USERS,\r\n        users\r\n    }\r\n};\r\nexport const setCurrentActiveCreate = (curentPage) => {\r\n    return {\r\n        type: SET_CURRENT_PAGE,\r\n        curentPage: curentPage\r\n    }\r\n\r\n};\r\nexport const setTotalUsersActiveCreate = (totalCount) => {\r\n    return {\r\n        type: SET_TOTAL_USER_COUNT,\r\n        totalCount\r\n    }\r\n};\r\nexport const setIsFetcherActiveCreate = (fetch) =>{\r\n    return{\r\n        type:SET_IS_FETCHER,\r\n        fetch\r\n    }\r\n};\r\nexport const isBtnDisable = (status) =>{\r\n    return{\r\n        type:BTN_DISABLE,\r\n        status\r\n    }\r\n};\r\n\r\nexport const getUserThunk = (currentPage,pageSize)=>{\r\n    return (dispatch) => {\r\n        Api.getUsers(currentPage, pageSize)\r\n            .then(response => {\r\n                dispatch(setIsFetcherActiveCreate(false));\r\n                dispatch(setUsersActiveCreate(response.data.items));\r\n                dispatch(setTotalUsersActiveCreate(response.data.totalCount ))\r\n            });\r\n    }\r\n};\r\n\r\nexport const getPageUserThunk =(pageNumber, pageSize)=>{\r\n    return (dispatch)=>{\r\n        dispatch(setCurrentActiveCreate(pageNumber));\r\n        dispatch(setIsFetcherActiveCreate(true));\r\n        Api.getUsers(pageNumber, pageSize)\r\n            .then(response => {\r\n                dispatch(setIsFetcherActiveCreate(false));\r\n                dispatch(setUsersActiveCreate(response.data.items));\r\n            });\r\n    }\r\n};\r\n\r\nexport const unFollowThunk = (id) =>{\r\n    return (dispatch)=>{\r\n        dispatch(isBtnDisable(true));\r\n        Api.unFollowed(id)\r\n            .then(response =>{\r\n            if(response.data.resultCode == 0){\r\n                dispatch(unfolowActiveCreate(id))\r\n            }\r\n                dispatch(isBtnDisable(false));\r\n        })\r\n    }\r\n};\r\nexport const followThunk = (id) =>{\r\n    return (dispatch) =>{\r\n        dispatch(isBtnDisable(true));\r\n        Api.upFollowed(id)\r\n            .then(response=>{\r\n                if(response.data.resultCode ==0){\r\n                    dispatch(folowActiveCreate(id))\r\n                }\r\n                dispatch(isBtnDisable(false));\r\n            })\r\n\r\n    }\r\n}\r\n\r\nexport default userReducers;\r\n","import classes from \"./Paginator.module.css\"\r\nimport React, {useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst Paginator = (props) => {\r\n    let pageCount = Math.ceil(props.totalUserCount / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pageCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    let portionCount = Math.ceil(pageCount / props.portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionNumber = (portionNumber - 1) * props.portionSize + 1;\r\n    let rightPortionNumber = portionNumber * props.portionSize;\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.pageSize}>\r\n                {portionNumber > 1 && <button className={classes.btn} onClick={() => {\r\n                    setPortionNumber(portionNumber - 1)\r\n                }}>Назад</button>}\r\n                {pages\r\n                    .filter(p => p >= leftPortionNumber && p <= rightPortionNumber)\r\n                    .map(m => {\r\n                        return <span className={props.currentPage === m && classes.select}\r\n                                     onClick={() => {\r\n                                         props.onPageChanged(m)\r\n                                     }}>{m},</span>\r\n\r\n                    })}\r\n                {portionCount > portionNumber && <button className={classes.btn} onClick={() => {\r\n                    setPortionNumber(portionNumber + 1)\r\n                }}>Вперед</button>}\r\n            </div>\r\n\r\n\r\n        </div>)\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        portionSize: state.usersPage.portionSize\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(Paginator);\r\n\r\n","import React from \"react\";\r\nimport classes from \"./Users.module.css\";\r\nimport photos from \"../../img/person__img.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Paginator from \"../common/paginator/Paginator\";\r\n\r\nconst Users = (props) => {\r\n    return (\r\n        <div>\r\n            <Paginator currentPage={props.currentPage} onPageChanged={props.onPageChanged}\r\n                       totalUserCount={props.totalUserCount}\r\n                       pageSize={props.pageSize}/>\r\n            {props.users.map(m => <div className={classes.container}>\r\n                <div>\r\n                    <NavLink to={\"/profile/\" + m.id}>\r\n                        <img className={classes.img}\r\n                             src={m.photos.small != null ? m.photos.small : photos}/>\r\n                    </NavLink>\r\n                    <div>\r\n                        {m.followed\r\n                            ? <button disabled={props.isDisable} onClick={() => {\r\n                                props.unFollow(m.id);\r\n                            }}>unfollowed</button>\r\n                            : <button disabled={props.isDisable} onClick={() => {\r\n                                props.followw(m.id);\r\n                            }}>followed</button>\r\n                        }\r\n\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div className={classes.status}>{m.status}</div>\r\n                    <div>{m.name}</div>\r\n                </div>\r\n            </div>)}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Users;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    followThunk,\r\n    getPageUserThunk,\r\n    getUserThunk,  unFollowThunk,\r\n\r\n} from \"../../redux/user-reducers\";\r\nimport Users from \"./Users\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport PreloaderTwo from \"../common/PreloaderTwo\";\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getUserThunk(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n    this.props.getPageUserThunk(pageNumber, this.props.pageSize)\r\n    };\r\n\r\n    render() {\r\n        return (<>\r\n                {this.props.isFetcher ? <PreloaderTwo/> : null}\r\n                <Users onPageChanged={this.onPageChanged}\r\n                       currentPage={this.props.currentPage}\r\n                       totalUserCount={this.props.totalUserCount}\r\n                       pageSize={this.props.pageSize}\r\n                       users={this.props.users}\r\n                       unFollow={this.props.unFollowThunk}\r\n                       followw={this.props.followThunk}\r\n                       isDisable={this.props.isDisableBtn}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUserCount: state.usersPage.totalUserCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetcher: state.usersPage.isFetcher,\r\n        isDisableBtn:state.usersPage.isDisable\r\n    }\r\n};\r\n\r\nlet AuthRedirectComponent = withAuthRedirect(UsersContainer);\r\nexport const UserContainer = connect(mapStateToProps,\r\n    {\r\n        getUserThunk,\r\n        getPageUserThunk,\r\n        unFollowThunk,\r\n        followThunk\r\n    })( AuthRedirectComponent);","import React, {Suspense} from \"react\";\r\nimport \"./App.css\";\r\nimport {NavbarContainer} from \"./componets/navbar/Navbar\";\r\nimport Route from \"react-router-dom/es/Route\";\r\nimport ProfileContainer from \"./componets/profile/ProfileContainer\";\r\nimport {HeaderContainer} from \"./componets/header/HeaderContainer\";\r\nimport Login from \"./componets/login/Login\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport PreloaderTwo from \"./componets/common/PreloaderTwo\";\r\nimport Preloader from \"./componets/common/Preloader\";\r\nimport {UserContainer} from \"./componets/user/UserContainer\";\r\nconst DialogsContainer = React.lazy(() => import( \"./componets/dialogs/DialogsContainer\"));\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <PreloaderTwo/>\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n                <HeaderContainer/>\r\n                <div className=\"menu\">\r\n                    <NavbarContainer/>\r\n                    <div className=\"app-wrapper-content\">\r\n                        <Route exact path=\"/\" render={() => <Redirect to={\"/profile\"}/>}/>\r\n                        <Route path=\"/dialogs\" component={() => {\r\n                            return <Suspense fallback={<Preloader/>}>\r\n                                <DialogsContainer/>\r\n                            </Suspense>\r\n                        }}/>\r\n                        <Route path=\"/profile/:userId?\" component={() => <ProfileContainer/>}/>\r\n                        <Route path=\"/user\" component={() => <UserContainer/>}/>\r\n                        <Route path=\"/login\" component={() => <Login/>}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        initialized: state.app.initialized\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp})\r\n)(App);\r\n\r\n\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport userReducers from \"./user-reducers\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from \"redux-form\"\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: userReducers,\r\n    authUser: authReducer,\r\n    form : formReducer,\r\n    app:appReducer\r\n    }\r\n);\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\nwindow.store = store;\r\n\r\nexport default store;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport store from \"./redux/redux-store\"\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\n\r\n\r\nReactDOM.render(\r\n    <HashRouter>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </HashRouter>,\r\n    document.getElementById('root'));\r\nserviceWorker.unregister();\r\n\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__14FE5\",\"item\":\"Navbar_item__28lhx\",\"blue\":\"Navbar_blue__6cV-r\",\"dark\":\"Navbar_dark__30s2W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"ProfilInfo_img__1tD3G\",\"page_block\":\"ProfilInfo_page_block__114jh\",\"contacts\":\"ProfilInfo_contacts__2SdFV\",\"page_info_wrap\":\"ProfilInfo_page_info_wrap__1n6sO\",\"page_top\":\"ProfilInfo_page_top__2LfBL\",\"page_info\":\"ProfilInfo_page_info__AG54R\",\"page_post\":\"ProfilInfo_page_post__3UXkT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Login_container__1MRLo\",\"items\":\"Login_items__37xh8\",\"img\":\"Login_img__1nr2V\",\"items_block\":\"Login_items_block__3wmqu\",\"btn\":\"Login_btn__2eYz7\",\"formError\":\"Login_formError__1WsTV\"};","export const required =(value)=>{\r\n    if(value){\r\n        return undefined;\r\n    }return \"Error\"\r\n};\r\n\r\nexport const maxLenght = (maxLenght) =>\r\n    (value)=>{\r\n        if( value && value.length > maxLenght){\r\n            return `Max lenght is ${maxLenght} symbols`\r\n        }return undefined\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"FormContols_error__2gpmY\",\"input\":\"FormContols_input__bvvjG\",\"inputDiv\":\"FormContols_inputDiv__1k-3y\",\"inputNorm\":\"FormContols_inputNorm__1Q1nL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"Header_blue__ouW5z\",\"dark\":\"Header_dark__2Nk9L\",\"row\":\"Header_row__GGvHV\",\"item\":\"Header_item__1dIs_\",\"btn\":\"Header_btn__2tLwS\",\"topik\":\"Header_topik__3CwhO\"};","import React from \"react\";\r\nimport classes from \"./FormContols.module.css\"\r\n\r\n\r\n\r\nexport const Textarea = ({input, meta}, ...props) => {\r\n    let hasError = meta.error && meta.touched;\r\n    return (\r\n        <div>\r\n            <div>\r\n                <textarea className={hasError ? classes.input : \"\"} {...input}{...props}/>\r\n            </div>\r\n            {hasError && <span className={classes.error}>{meta.error}</span>}\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport const Input = ({type, meta,label, input}, ...props) => {\r\n    let hasError = meta.error && meta.touched;\r\n    return (\r\n        <div>\r\n            <div className={classes.inputDiv}>\r\n                <input type = {type} placeholder={label} className={hasError ? classes.input : classes.inputNorm} {...input}{...props}/>\r\n                <div>\r\n                    {hasError && <span className={classes.error}>{meta.error}</span>}\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"Paginator_select__1Epzb\",\"pageSize\":\"Paginator_pageSize__1RMCZ\",\"btn\":\"Paginator_btn__3CrTy\"};","module.exports = __webpack_public_path__ + \"static/media/person__img.8ba43db7.png\";","import React from \"react\";\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\nimport {connect} from \"react-redux\";\r\n\r\nexport const withAuthRedirect = (Component) =>{\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuths) return <Redirect to = \"/login\"/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    const mapStateToPropsParam = (state) =>{\r\n        return{\r\n            isAuths: state.authUser.isAuth\r\n        }\r\n    };\r\n\r\n    let isParamConnect = connect(mapStateToPropsParam)(RedirectComponent);\r\n    return  isParamConnect\r\n\r\n};\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__31jZx\",\"img\":\"Post_img__2-pJ6\",\"posts_items\":\"Post_posts_items__Z4X_m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"Users_img__khvpA\",\"wrap\":\"Users_wrap__3HWeW\",\"container\":\"Users_container__2ou0a\",\"item\":\"Users_item__3d9eC\",\"status\":\"Users_status__30jGX\",\"number\":\"Users_number__1sYnz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preLoader\":\"Preloader_preLoader__12JXO\",\"loader\":\"Preloader_loader__2VRDL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PreloaderTwo_container__1TWdM\",\"img\":\"PreloaderTwo_img__2faZf\"};"],"sourceRoot":""}